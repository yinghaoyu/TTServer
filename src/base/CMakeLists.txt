cmake_minimum_required(VERSION 2.6)
PROJECT(Base)

AUX_SOURCE_DIRECTORY(${PROJECT_SOURCE_DIR} SRC_LIST1)
AUX_SOURCE_DIRECTORY(${PROJECT_SOURCE_DIR}/pb/protocol SRC_LIST2)
AUX_SOURCE_DIRECTORY(${PROJECT_SOURCE_DIR}/jsoncpp SRC_LIST3)

message(STATUS "PROJECT_BINARY_DIR = " ${PROJECT_BINARY_DIR})
message(STATUS "PROJECT_SOURCE_DIR = " ${PROJECT_SOURCE_DIR})

if(APPLE)
  SET(PB_LIB_DIR ${PROJECT_SOURCE_DIR}/pb/lib/mac)
elseif(UNIX)
  SET(PB_LIB_DIR ${PROJECT_SOURCE_DIR}/pb/lib/linux)
endif()

SET(LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/../bin)

ADD_DEFINITIONS( -g -W -Wall -D_REENTRANT -D_FILE_OFFSET_BITS=64 -DAC_HAS_INFO
-DAC_HAS_WARNING -DAC_HAS_ERROR -DAC_HAS_CRITICAL -DTIXML_USE_STL
-DAC_HAS_DEBUG -DLINUX_DAEMON)

INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR} ${PROJECT_SOURCE_DIR}/../ ${PROJECT_SOURCE_DIR}/jsoncpp ${PROJECT_SOURCE_DIR}/pb ${PROJECT_SOURCE_DIR}/pb/protocol)
LINK_DIRECTORIES(${PROJECT_SOURCE_DIR} ${PB_LIB_DIR} )

ADD_LIBRARY(base STATIC ${SRC_LIST1} ${SRC_LIST2} ${SRC_LIST3})

TARGET_LINK_LIBRARIES(base pthread crypto)
